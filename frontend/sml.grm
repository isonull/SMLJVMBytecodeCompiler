open FullSyntaxTree

%%

%name SML

%term
(* (      )      {      }      [      ]    *)
   LRBR | RRBR | LCBR | RCBR | LSBR | RSBR |
(* #    =    |      ,       :       ;      ->    =>     *      .   *)
   NS | EQ | PIPE | COMMA | COLON | SEMI | RAR | RARR | STAR | DOT |
(* _      ...   *)
   WILD | RWILD |
(* andalso   orelse *)
   ANDALSO | ORELSE |
(* raise   handle *)
   RAISE | HANDLE |
(* if   then   else *)
   IF | THEN | ELSE |
(* while   do *)
   WHILE | DO |
(* case   of   fn *)
   CASE | OF | FN |
(* rec   val   fun   type   datatype   abstype   exception *)
   REC | VAL | FUN | TYPE | DATATYPE | ABSTYPE | EXCEPTION |
(* local   let   in   end   open *)
   LOCAL | LET | IN | END | OPEN |
(* with   withtype   as   and*)
   WITH | WITHTYPE | AS | AND |
(* infex   infixr   nonfix *)
   INFIX | INFIXR | NONFIX |
   EOP |

   INTSCON of int |
   REALSCON of real |
   WORDSCON of word |
   CHARSCON of char |
   STRSCON of string|

   ID of string |
   IDPRE of string |
   TYVAR of string

%nonterm
PROG of prog |
TOPDEC of topdec |
STRDEC of strdec |

ATEXP of atexp |
EXPSEQ of expseq |
EXPROW of exprow |
APPEXP of appexp |
INFEXP of infexp |
EXP of exp |
MATCH of match |
MRULE of mrule |
DEC of dec |
VALBIND of valbind |
FVALBIND of fvalbind |
TYPBIND of typbind |
DATBIND of datbind |
CONBIND of conbind |
EXBIND of exbind |
EXBINDELE of exbindele |
ATPAT of atpat |
PATROW of patrow |
PATROWELE of patrowele |
PAT of pat |
TY of ty |
TYROW of tyrow |

SCON of scon |
LAB   of lab |

LIDPRE of lidpre |
VID   of vid |
LVID of lvid |
STRID of strid |
LSTRID of lstrid |
TYCON of tycon |
LTYCON of ltycon |

LSTRIDSEQ of lstridseq |
DECSEQ of decseq |
VIDSEQ of vidseq |
VROW of vrow |
FROW of frow |
FVAL of fval |
TYSEQ of tyseq |
TYVARSEQ of tyvarseq |

TYTUP of tyseq   |
EXPTUP of expseq |
PATTUP of patseq |
PATLIST of patseq |
EXPLIST of expseq

%keyword
   ANDALSO ORELSE RAISE HANDLE
   IF THEN ELSE WHILE DO CASE OF FN
   REC VAL FUN TYPE DATATYPE ABSTYPE EXCEPTION
   LOCAL LET IN END OPEN
   WITH WITHTYPE AS AND
   INFIX INFIXR NONFIX

%left COLON
%right SEMI RAR

%start PROG
%pos Pos.pos
%eop EOP
%noshift EOP

%pure
%nodefault
%verbose

%%

PROG : TOPDEC (TOPDEC)

TOPDEC : STRDEC (STRDEC)

STRDEC : DEC (DEC)

ATEXP : SCON (SCON_ATEXP SCON)
      | LVID (LVID_ATEXP LVID)
      | LCBR EXPROW RCBR (RCD_ATEXP EXPROW)
      | NS LAB (LAB_ATEXP LAB)
      | LRBR RRBR (UNIT_ATEXP)
      | LRBR EXPTUP RRBR (TUP_ATEXP EXPTUP)
      | LSBR EXPLIST RSBR (LIST_ATEXP EXPLIST)
      | LRBR EXPSEQ RRBR (SEQ_ATEXP EXPSEQ)
      | LET DEC IN EXP END (LET_ATEXP (DEC, [EXP]))
      | LET DEC IN EXPSEQ END (LET_ATEXP (DEC, EXPSEQ))
      | LRBR EXP RRBR (EXP_ATEXP EXP)

INFEXP : APPEXP (APP_INFEXP APPEXP)
       | INFEXP VID INFEXP (N_INFEXP (INFEXP1, VID ,INFEXP2))

EXP : INFEXP (INF_EXP INFEXP)
    | EXP COLON TY (TY_EXP (EXP, TY))
    | EXP ANDALSO EXP (AND_EXP (EXP1, EXP2))
    | EXP ORELSE EXP (OR_EXP (EXP1, EXP2))
    | EXP HANDLE MATCH (HAND_EXP (EXP, MATCH))
    | RAISE EXP (RAS_EXP EXP)
    | IF EXP THEN EXP ELSE EXP (IF_EXP (EXP1, EXP2, EXP3))
    | WHILE EXP DO EXP (WHIL_EXP (EXP1, EXP2))
    | CASE EXP OF MATCH (CASE_EXP (EXP, MATCH))
    | FN MATCH (FN_EXP MATCH)

DEC : VAL LRBR TYVARSEQ RRBR VALBIND (VAL_DEC (TYVARSEQ, VALBIND))
    | VAL TYVAR VALBIND (VAL_DEC ([TYVAR], VALBIND))
    | VAL VALBIND (VAL_DEC (nil, VALBIND))
    | FUN LRBR TYVARSEQ RRBR FVALBIND (FUN_DEC (TYVARSEQ, FVALBIND))
    | FUN TYVAR FVALBIND (FUN_DEC ([TYVAR], FVALBIND))
    | FUN FVALBIND (FUN_DEC (nil, FVALBIND))
    | TYPE TYPBIND (TYP_DEC TYPBIND)
    | DATATYPE DATBIND (DAT_DEC (DATBIND, NONE))
    | DATATYPE DATBIND WITHTYPE TYPBIND (DAT_DEC (DATBIND, SOME TYPBIND))
    | DATATYPE TYCON EQ DATATYPE LTYCON (REP_DEC (TYCON, LTYCON))
    | ABSTYPE DATBIND WITH DEC END (ABS_DEC (DATBIND, NONE, DEC))
    | ABSTYPE DATBIND WITHTYPE TYPBIND WITH DEC END (ABS_DEC (DATBIND, SOME TYPBIND, DEC))
    | EXCEPTION EXBIND (EXC_DEC EXBIND)
    | LOCAL DEC IN DEC END (LOC_DEC (DEC1, DEC2))
    | OPEN LSTRIDSEQ (OPEN_DEC LSTRIDSEQ)
    | DEC DEC (SEQ_DEC (DEC1, DEC2))
    | DEC SEMI DEC (SEQ_DEC (DEC1, DEC2))
    | INFIX VIDSEQ (INF_DEC (NONE, VIDSEQ))
    | INFIX INTSCON VIDSEQ (INF_DEC (SOME INTSCON, VIDSEQ))
    | INFIXR VIDSEQ (INFR_DEC (NONE, VIDSEQ))
    | INFIXR INTSCON VIDSEQ (INFR_DEC (SOME INTSCON, VIDSEQ))
    | NONFIX VIDSEQ (NOF_DEC VIDSEQ)

VALBIND : VROW (NRE_VALBIND VROW)
        | REC VROW (REC_VALBIND VROW)

EXBINDELE : VID (VID_EXBIND_ELE (VID, NONE))
          | VID OF TY (VID_EXBIND_ELE (VID, SOME TY))
          | VID EQ LVID (REP_EXBIND_ELE (VID, LVID))

PATTUP : PAT COMMA PAT ([PAT1, PAT2])
       | PAT COMMA PATTUP (PAT :: PATTUP)

PATLIST : ([])
        | PAT ([PAT])
        | PAT COMMA PATLIST (PAT :: PATLIST)

ATPAT : WILD (WILD_ATPAT)
      | SCON (SCON_ATPAT SCON)
      | LVID (LVID_ATPAT LVID)
      | LCBR PATROW RCBR (RCD_ATPAT PATROW)
      | LRBR RRBR (UNIT_ATPAT)
      | LRBR PATTUP RRBR (TUP_ATPAT PATTUP)
      | LSBR PATLIST RSBR  (LIST_ATPAT PATLIST)
      | LRBR PAT RRBR (PAT_ATPAT PAT)

PATROWELE : RWILD (WILD_PATROW_ELE)
          | VID (VID_PATROW_ELE (VID, NONE, NONE))
          | VID COLON TY (VID_PATROW_ELE (VID, SOME TY, NONE))
          | VID AS PAT (VID_PATROW_ELE (VID, NONE, SOME PAT))
          | VID COLON TY AS PAT (VID_PATROW_ELE (VID, SOME TY, SOME PAT))
          | LAB EQ PAT (LAB_PATROW_ELE (LAB, PAT))

PAT : ATPAT (AT_PAT ATPAT)
    | LVID ATPAT (CON_PAT (LVID, ATPAT))
    | PAT VID PAT (INF_PAT (PAT1, VID, PAT2))
    | PAT COLON TY (TY_PAT (PAT, TY))
    | VID AS PAT (LAY_PAT (VID, NONE, PAT))
    | VID COLON TY AS PAT (LAY_PAT (VID, SOME TY, PAT))

(* TYTUP before TY for higher priority *)
TYTUP : TY STAR TY (TY1 :: TY2 :: nil)
      | TY STAR TYTUP (TY :: TYTUP)

TY : TYVAR (VAR_TY (TYVAR))
   | LCBR TYROW RCBR (RCD_TY (TYROW))
   | TYTUP (TUP_TY TYTUP)
   | TY LTYCON (CON_TY ([TY], LTYCON))
   | LTYCON (CON_TY (nil, LTYCON))
   | LRBR TYSEQ RRBR LTYCON (CON_TY (TYSEQ , LTYCON))
   | TY RAR TY (FUN_TY (TY1, TY2))
   | LRBR TY RRBR (TY)

LAB : ID (STR_LAB ID)
    | INTSCON (INT_LAB INTSCON)

SCON : INTSCON  (INT_SCON  (INTSCON ))
     | REALSCON (REAL_SCON (REALSCON))
     | WORDSCON (WORD_SCON (WORDSCON))
     | CHARSCON (CHAR_SCON (CHARSCON))
     | STRSCON  (STR_SCON  (STRSCON ))

VID : ID (ID)

TYCON : ID (ID)

STRID : ID (ID)

LIDPRE : IDPRE ([IDPRE])
       | IDPRE LIDPRE (IDPRE :: LIDPRE)

LVID : VID (([],VID))
     | LIDPRE VID ((LIDPRE, VID))

LTYCON : TYCON (([], TYCON))
       | LIDPRE TYCON ((LIDPRE, TYCON))

LSTRID : STRID (([], STRID))
       | LIDPRE STRID ((LIDPRE, STRID))


LSTRIDSEQ : LSTRID ([LSTRID])
          | LSTRID LSTRIDSEQ (LSTRID :: LSTRIDSEQ)

VIDSEQ : VID ([VID])
       | VID VIDSEQ (VID :: VIDSEQ)

EXPSEQ : EXP SEMI EXP ([EXP1, EXP2])
       | EXP SEMI EXPSEQ (EXP :: EXPSEQ)

VROW : PAT EQ EXP ([(PAT, EXP)])
     | PAT EQ EXP AND VROW ((PAT, EXP) :: VROW)

FROW : ATPAT ([ATPAT])
     | ATPAT FROW (ATPAT :: FROW)

FVAL : VID FROW EQ EXP ([(VID, FROW, EXP)])
     | VID FROW EQ EXP PIPE FVAL ((VID, FROW, EXP) :: FVAL)

TYSEQ : TY ([TY])
      | TY TYSEQ (TY :: TYSEQ)

TYVARSEQ : TYVAR ([TYVAR])
         | TYVAR TYVARSEQ (TYVAR :: TYVARSEQ)


EXPROW : LAB EQ EXP ([(LAB, EXP)])
       | LAB EQ EXP COMMA EXPROW ((LAB, EXP) :: EXPROW)

APPEXP : ATEXP ([ATEXP])
       | APPEXP ATEXP (ATEXP :: APPEXP)

MRULE : PAT RARR EXP ((PAT, EXP))

MATCH : MRULE ([MRULE])
      | MRULE PIPE MATCH (MRULE :: MATCH)

FVALBIND : FVAL ([FVAL])
         | FVAL AND FVALBIND (FVAL :: FVALBIND)

TYPBIND : LRBR TYVARSEQ RRBR TYCON EQ TY ([(TYVARSEQ, TYCON, TY)])
        | TYVAR TYCON EQ TY ([([TYVAR], TYCON, TY)])
        | TYCON EQ TY ([(nil, TYCON, TY)])
        | LRBR TYVARSEQ RRBR TYCON EQ TY AND TYPBIND ((TYVARSEQ, TYCON, TY) :: TYPBIND)
        | TYVAR TYCON EQ TY AND TYPBIND (([TYVAR], TYCON, TY) :: TYPBIND)
        | TYCON EQ TY AND TYPBIND ((nil, TYCON, TY) :: TYPBIND)

CONBIND : VID ([(VID, NONE)])
        | VID OF TY ([(VID, SOME TY)])
        | VID PIPE CONBIND ((VID, NONE) :: CONBIND)
        | VID OF TY PIPE CONBIND ((VID, SOME TY) :: CONBIND)

DATBIND : LRBR TYVARSEQ RRBR TYCON EQ CONBIND ([(TYVARSEQ, TYCON, CONBIND)])
        | TYVAR TYCON EQ CONBIND ([([TYVAR], TYCON, CONBIND)])
        | TYCON EQ CONBIND ([(nil, TYCON, CONBIND)])
        | LRBR TYVARSEQ RRBR TYCON EQ CONBIND AND DATBIND ((TYVARSEQ, TYCON, CONBIND) :: DATBIND)
        | TYVAR TYCON EQ CONBIND AND DATBIND (([TYVAR], TYCON, CONBIND) :: DATBIND)
        | TYCON EQ CONBIND AND DATBIND ((nil, TYCON, CONBIND) :: DATBIND)

EXBIND : EXBINDELE ([EXBINDELE])
       | EXBINDELE EXBIND (EXBINDELE :: EXBIND)

PATROW : PATROWELE ([PATROWELE])
       | PATROWELE PATROW (PATROWELE :: PATROW)

TYROW : LAB COLON TY ([(LAB, TY)])
      | LAB COLON TY COMMA TYROW ((LAB, TY) :: TYROW)

EXPLIST : (nil)
        | EXP ([EXP])
        | EXP COMMA EXPLIST (EXP :: EXPLIST)

EXPTUP : EXP COMMA EXP (EXP1 :: EXP2 :: nil)
       | EXP COMMA EXPTUP (EXP :: EXPTUP)
